{"version":3,"sources":["components/AutoDismissAlert/AutoDismissAlert.js","components/Header/Header.js","apiConfig.js","api/auth.js","components/auth/SignUp.js","components/AutoDismissAlert/messages.js","components/auth/SignIn.js","components/auth/SignOut.js","components/auth/ChangePassword.js","components/Shared/PlayerForm.js","App.js","index.js"],"names":["AutoDismissAlert","variant","heading","message","useState","show","setShow","timeoutId","setTimeoutId","console","log","useEffect","id","setTimeout","clearTimeout","Alert","onClose","dismissible","className","Heading","authenticatedOptions","to","unauthenticatedOptions","alwaysOptions","idName","Header","user","Navbar","bg","expand","Container","Brand","style","color","textDecoration","Toggle","aria-controls","Collapse","Nav","email","apiUrls","apiUrl","window","location","hostname","signUp","password","passwordConfirmation","axios","post","credentials","password_confirmation","signIn","signOut","delete","headers","Authorization","token","changePassword","oldPassword","newPassword","patch","passwords","old","new","SignUp","msgAlert","setUser","setEmail","setPassword","setPasswordConfirmation","shouldNavigate","setShouldNavigate","onSignUp","event","a","preventDefault","res","data","Form","onSubmit","Group","controlId","Label","Control","required","type","name","value","placeholder","onChange","target","Button","SignIn","onSignIn","SignOut","clearUser","performSignOut","ChangePassword","setOldPassword","setNewPassword","onChangePassword","PlayerForm","initiative","hp","statusConditions","playerForm","setPlayerForm","playerFormId","setPlayerFormId","url","method","then","catch","error","e","stats","_id","App","msgAlerts","setMsgAlerts","uuid","map","path","element","appJsx","basename","process","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.42240537.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\n\n// We have imported some custom styling for this alert\n// Which will be off-topic, unless extra time at the end of the lesson.\nimport './AutoDismissAlert.scss'\nimport Alert from 'react-bootstrap/Alert'\n\nfunction AutoDismissAlert ({ variant, heading, message }) {\n  // create `show` state. When this is false, the Alert will be hidden from the screen.\n  const [show, setShow] = useState(true)\n  // We are going to create a timer that will stop showing the alert after 5 seconds\n  // We store the timeoutId, incase we need to cancel the timer early (because the AutoDismissAlert was unmounted)\n  const [timeoutId, setTimeoutId] = useState(null)\n  console.log(timeoutId)\n\n  // this will run once, when the component is mounted (added) to the screen\n  // it runs once, because it has an empty dependency array as the second argument\n  useEffect(() => {\n    // We want to create a timer, that closes the alert after 5 seconds (5000 milliseconds)\n    const id = setTimeout(() => setShow(false), 5000)\n    // Keep track of the timeoutId\n    setTimeoutId(id)\n\n    // We want to clean up the timer\n    // this is like componentWillUnmount, it is run whenever the component is unmounted\n    // and its also run before an effect is re-created\n    return function cleanup () {\n      clearTimeout(timeoutId)\n    }\n  }, [])\n\n  return (\n    <Alert\n      /* This is the color, make it the bootstrap passed down as a prop */\n      variant={variant}\n      /* This function sets the show state to false, whenever the x in the top right is clicked. */\n      onClose={() => setShow(false)}\n      /* This adds a close button to our alert */\n      dismissible\n      /* The show property will display the alert if true, and hide it if false. */\n      show={show}\n    >\n      <div className='container'>\n        <Alert.Heading>{heading}</Alert.Heading>\n        <p className='alert-body'>{message}</p>\n      </div>\n    </Alert>\n  )\n}\n\nexport default AutoDismissAlert\n","import React from 'react'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Container from 'react-bootstrap/Container'\r\nimport { Link, NavLink } from 'react-router-dom'\r\n\r\nconst authenticatedOptions = (\r\n  <>\r\n    <NavLink to='/change-password' className='nav-link'>Change Password</NavLink>\r\n    <NavLink to='/sign-out' className='nav-link'>Sign Out</NavLink>\r\n  </>\r\n)\r\n\r\nconst unauthenticatedOptions = (\r\n  <>\r\n    <NavLink to='/sign-up' className='nav-link'>Sign Up</NavLink>\r\n    <NavLink to='/sign-in' className='nav-link'>Sign In</NavLink>\r\n  </>\r\n)\r\n\r\nconst alwaysOptions = (\r\n  <>\r\n    <NavLink to='/session' idName= 'session' className='nav-link'>Session</NavLink>\r\n  </>\r\n)\r\n\r\nconst Header = ({ user }) => (\r\n  <Navbar bg='primary' variant='dark' expand='md'>\r\n    <Container>\r\n      <Navbar.Brand>\r\n        <Link to='/' style={{ color: '#FFF', textDecoration: 'none' }}>Encounter Companion 1.0</Link>\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n      <Navbar.Collapse id='basic-navbar-nav'>\r\n        <Nav className='ms-auto'>\r\n          {user && (\r\n            <span className='navbar-text me-2'>Welcome, {user.email}</span>\r\n          )}\r\n          {alwaysOptions}\r\n          {user ? authenticatedOptions : unauthenticatedOptions}\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Container>\r\n  </Navbar>\r\n)\r\n\r\nexport default Header\r\n","let apiUrl\r\nconst apiUrls = {\r\n  production: 'https://enigmatic-fjord-69565.herokuapp.com',\r\n  development: 'http://localhost:4741'\r\n}\r\n\r\nif (window.location.hostname === 'localhost') {\r\n  apiUrl = apiUrls.development\r\n} else {\r\n  apiUrl = apiUrls.production\r\n}\r\n\r\nexport default apiUrl\r\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const signUp = (email, password, passwordConfirmation) => {\n  return axios.post(apiUrl + '/sign-up/', {\n    credentials: {\n      email,\n      password,\n      password_confirmation: passwordConfirmation\n    }\n  })\n}\n\nexport const signIn = (email, password) => {\n  return axios.post(apiUrl + '/sign-in/', {\n    credentials: {\n      email,\n      password\n    }\n  })\n}\n\nexport const signOut = user => {\n  return axios.delete(apiUrl + '/sign-out/', {\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\nexport const changePassword = (oldPassword, newPassword, user) => {\n  return axios.patch(\n    apiUrl + '/change-password/',\n    {\n      passwords: {\n        old: oldPassword,\n        new: newPassword\n      }\n    },\n    {\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      }\n    }\n  )\n}\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signUp, signIn } from '../../api/auth'\nimport { signUpSuccess, signUpFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst SignUp = ({ msgAlert, setUser }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [passwordConfirmation, setPasswordConfirmation] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  const onSignUp = async (event) => {\n    event.preventDefault()\n\n    try {\n      await signUp(email, password, passwordConfirmation)\n      const res = await signIn(email, password)\n      setUser(res.data.user)\n      msgAlert({\n        heading: 'Sign Up Success',\n        message: signUpSuccess,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      setEmail('')\n      setPassword('')\n      setPasswordConfirmation('')\n      msgAlert({\n        heading: 'Sign Up Failed with error: ' + error.message,\n        message: signUpFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Sign Up</h3>\n        <Form onSubmit={onSignUp}>\n          <Form.Group controlId='email'>\n            <Form.Label>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={event => setEmail(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={event => setPassword(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='passwordConfirmation'>\n            <Form.Label>Password Confirmation</Form.Label>\n            <Form.Control\n              required\n              name='passwordConfirmation'\n              value={passwordConfirmation}\n              type='password'\n              placeholder='Confirm Password'\n              onChange={event => setPasswordConfirmation(event.target.value)}\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default SignUp\n","export const signUpSuccess = 'Succesfully registered! You\\'ve been signed in as well.'\nexport const signUpFailure = 'Registration failed. Email may be taken, or passwords don\\'t match.'\nexport const signInSuccess = 'Welcome!'\nexport const signInFailure = 'Failed to sign in. Check your email and password and try again.'\nexport const signOutSuccess = 'Come back soon!'\nexport const changePasswordSuccess = 'Password changed successfully!'\nexport const changePasswordFailure = 'Failed to change passwords. Check your old password and try again.'\n","import React, { useState } from 'react'\r\nimport { Navigate } from 'react-router-dom'\r\n\r\nimport { signIn } from '../../api/auth'\r\nimport { signInSuccess, signInFailure } from '../AutoDismissAlert/messages'\r\n\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nconst SignIn = ({ msgAlert, setUser }) => {\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [shouldNavigate, setShouldNavigate] = useState(false)\r\n\r\n  const onSignIn = async (event) => {\r\n    event.preventDefault()\r\n\r\n    try {\r\n      const res = await signIn(email, password)\r\n      setUser(res.data.user)\r\n\r\n      msgAlert({\r\n        heading: 'Sign In Success',\r\n        message: signInSuccess,\r\n        variant: 'success'\r\n      })\r\n      setShouldNavigate(true)\r\n    } catch (error) {\r\n      setEmail('')\r\n      setPassword('')\r\n      msgAlert({\r\n        heading: 'Sign In Failed with error: ' + error.message,\r\n        message: signInFailure,\r\n        variant: 'danger'\r\n      })\r\n    }\r\n  }\r\n\r\n  if (shouldNavigate) {\r\n    return <Navigate to='/session' />\r\n  }\r\n\r\n  return (\r\n    <div className='row'>\r\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\r\n        <h3>Sign In</h3>\r\n        <Form onSubmit={onSignIn}>\r\n          <Form.Group controlId='email'>\r\n            <Form.Label>Email address</Form.Label>\r\n            <Form.Control\r\n              required\r\n              type='email'\r\n              name='email'\r\n              value={email}\r\n              placeholder='Enter email'\r\n              onChange={event => setEmail(event.target.value)}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group controlId='password'>\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              required\r\n              name='password'\r\n              value={password}\r\n              type='password'\r\n              placeholder='Password'\r\n              onChange={event => setPassword(event.target.value)\r\n              }\r\n            />\r\n          </Form.Group>\r\n          <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignIn\r\n","import React, { useState, useEffect } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { signOut } from '../../api/auth'\nimport { signOutSuccess } from '../AutoDismissAlert/messages'\n\nconst SignOut = ({ msgAlert, clearUser, user }) => {\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  // this is like componentDidMount, it will run whenever the SignOut component\n  // is mounted (or added) to the page\n  useEffect(() => {\n  // for performance reasons, when using `useEffect`\n  // it's a best practice to create a helper function w/ async/await\n    const performSignOut = async () => {\n    // make a signOut axios request\n      await signOut(user)\n\n      msgAlert({\n        heading: 'Signed Out Successfully',\n        message: signOutSuccess,\n        variant: 'success'\n      })\n\n      // reset the user back to its initial value\n      clearUser()\n      setShouldNavigate(true)\n    }\n    performSignOut()\n  }, [])\n\n  if (!user || shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return ''\n}\n\nexport default SignOut\n","import React, { useState } from 'react'\nimport { Navigate } from 'react-router-dom'\n\nimport { changePassword } from '../../api/auth'\nimport { changePasswordSuccess, changePasswordFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nconst ChangePassword = ({ msgAlert, user }) => {\n  const [oldPassword, setOldPassword] = useState('')\n  const [newPassword, setNewPassword] = useState('')\n  const [shouldNavigate, setShouldNavigate] = useState(false)\n\n  const onChangePassword = async (event) => {\n    event.preventDefault()\n\n    try {\n      await changePassword(oldPassword, newPassword, user)\n      msgAlert({\n        heading: 'Change Password Success',\n        message: changePasswordSuccess,\n        variant: 'success'\n      })\n      setShouldNavigate(true)\n    } catch (error) {\n      setOldPassword('')\n      setNewPassword('')\n      msgAlert({\n        heading: 'Change Password Failed with error: ' + error.message,\n        message: changePasswordFailure,\n        variant: 'danger'\n      })\n    }\n  }\n\n  if (!user || shouldNavigate) {\n    return <Navigate to='/' />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Change Password</h3>\n        <Form onSubmit={onChangePassword}>\n          <Form.Group controlId='oldPassword'>\n            <Form.Label>Old password</Form.Label>\n            <Form.Control\n              required\n              name='oldPassword'\n              value={oldPassword}\n              type='password'\n              placeholder='Old Password'\n              onChange={event => setOldPassword(event.target.value)}\n            />\n          </Form.Group>\n          <Form.Group controlId='newPassword'>\n            <Form.Label>New Password</Form.Label>\n            <Form.Control\n              required\n              name='newPassword'\n              value={newPassword}\n              type='password'\n              placeholder='New Password'\n              onChange={event => setNewPassword(event.target.value)\n              }\n            />\n          </Form.Group>\n          <Button className='mt-2' variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </div>\n  )\n}\n\nexport default ChangePassword\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport apiUrl from '../../apiConfig'\r\n\r\nconst PlayerForm = ({ user }) => {\r\n  const [playerForm, setPlayerForm] = useState({ name: '', initiative: '', hp: '', statusConditions: '' })\r\n  const [playerFormId, setPlayerFormId] = useState('')\r\n  useEffect(() => {\r\n    if (!playerFormId === '') {\r\n      axios({\r\n        url: `${apiUrl}/stats/${playerFormId}`,\r\n        method: 'GET'\r\n      })\r\n        .then(res => console.log(res.data))\r\n        .catch(console.error)\r\n    }\r\n  }, [playerFormId])\r\n  const handleSubmit = (e) => {\r\n  // prevent default\r\n    e.preventDefault()\r\n    // make an axios call to the backend to create a new resource\r\n    axios({\r\n      url: `${apiUrl}/stats`,\r\n      method: 'POST',\r\n      data: { stats: playerForm },\r\n      headers: {\r\n        Authorization: `Bearer ${user.token}`\r\n      }\r\n    })\r\n      .then(res => setPlayerFormId(res.data.stats._id))\r\n      // .then(console.log)\r\n      .catch(console.error)\r\n    // display resource to user once its create\r\n    console.log(playerFormId, setPlayerFormId)\r\n  }\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label>Name</label>\r\n      <input\r\n        placeholder=\"Name\"\r\n        value={playerForm.name}\r\n        name=\"name\"\r\n        onChange={e => setPlayerForm({ ...playerForm, name: e.target.value })}\r\n      />\r\n\r\n      <label>Initiative</label>\r\n      <input\r\n        placeholder=\"Initiative\"\r\n        value={playerForm.initiative}\r\n        name=\"initiative\"\r\n        onChange={e => setPlayerForm({ ...playerForm, initiative: e.target.value })}\r\n      />\r\n\r\n      <label>HP</label>\r\n      <input\r\n        placeholder=\"HP\"\r\n        value={playerForm.hp}\r\n        name=\"hp\"\r\n        onChange={e => setPlayerForm({ ...playerForm, hp: e.target.value })}\r\n      />\r\n\r\n      <label>Status Conditions</label>\r\n      <input\r\n        placeholder=\"Status Condition\"\r\n        value={playerForm.statusConditions}\r\n        name=\"statusConditions\"\r\n        onChange={e => setPlayerForm({ ...playerForm, statusConditions: e.target.value })}\r\n      />\r\n\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default PlayerForm\r\n\r\n// import React from 'react'\r\n\r\n// function handleSubmit (event) {\r\n//   event.preventDefault()\r\n// }\r\n\r\n// class PlayerForm extends React.Component {\r\n//   constructor (props) {\r\n//     super(props)\r\n//     this.state = {\r\n//       name: null,\r\n//       initiative: null,\r\n//       hp: null,\r\n//       statusConditions: null\r\n//     }\r\n\r\n//     this.handleInputChange = this.handleInputChange.bind(this)\r\n//   }\r\n\r\n//   handleInputChange (event) {\r\n//     const target = event.target\r\n//     const value = target.type === 'checkbox' ? target.checked : target.value\r\n//     const name = target.name\r\n\r\n//     this.setState({\r\n//       [name]: value\r\n//     })\r\n//   }\r\n\r\n//   render () {\r\n//     return (\r\n//       <form onSubmit={ handleSubmit }>\r\n//         <label>\r\n//           Name:\r\n//           <input\r\n//             name=\"name\"\r\n//             type=\"string\"\r\n//             value={this.state.name}\r\n//             onChange={this.handleInputChange} />\r\n//         </label>\r\n//         <label>\r\n//           Initiative:\r\n//           <input\r\n//             name=\"initiative\"\r\n//             type=\"number\"\r\n//             value={this.state.initiative}\r\n//             onChange={this.handleInputChange} />\r\n//         </label>\r\n//         <label>\r\n//           HP:\r\n//           <input\r\n//             name=\"hp\"\r\n//             type=\"number\"\r\n//             value={this.state.hp}\r\n//             onChange={this.handleInputChange} />\r\n//         </label>\r\n//         <label>\r\n//           Status Conditions:\r\n//           <input\r\n//             name=\"statusConditions\"\r\n//             type=\"string\"\r\n//             value={this.state.statusConditions}\r\n//             onChange={this.handleInputChange} />\r\n//         </label>\r\n//         <input type='submit' name='submit-stats' />\r\n//       </form>\r\n//     )\r\n//   }\r\n// }\r\n\r\n// export default PlayerForm\r\n","import React, { useState } from 'react'\r\nimport { Route, Routes } from 'react-router-dom'\r\nimport { v4 as uuid } from 'uuid'\r\n\r\nimport AutoDismissAlert from './components/AutoDismissAlert/AutoDismissAlert'\r\nimport Header from './components/Header/Header'\r\nimport SignUp from './components/auth/SignUp'\r\nimport SignIn from './components/auth/SignIn'\r\nimport SignOut from './components/auth/SignOut'\r\nimport ChangePassword from './components/auth/ChangePassword'\r\nimport PlayerForm from './components/Shared/PlayerForm'\r\n\r\nconst App = () => {\r\n  const [user, setUser] = useState(null)\r\n  const [msgAlerts, setMsgAlerts] = useState([])\r\n\r\n  const clearUser = () => setUser(null)\r\n\r\n  const msgAlert = ({ heading, message, variant }) => {\r\n    const id = uuid()\r\n    setMsgAlerts(msgAlerts => ([...msgAlerts, { heading, message, variant, id }]))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Header user={user} />\r\n      {msgAlerts.map(msgAlert => (\r\n        <AutoDismissAlert\r\n          key={msgAlert.id}\r\n          heading={msgAlert.heading}\r\n          variant={msgAlert.variant}\r\n          message={msgAlert.message}\r\n          id={msgAlert.id}\r\n        />\r\n      ))}\r\n      <main className='container'>\r\n        <Routes>\r\n          <Route\r\n            path='/sign-up'\r\n            element={<SignUp msgAlert={msgAlert} setUser={setUser} /> }\r\n          />\r\n          <Route\r\n            path='/sign-in'\r\n            element={<SignIn msgAlert={msgAlert} setUser={setUser} /> }\r\n          />\r\n          <Route\r\n            path='/sign-out'\r\n            element={<SignOut msgAlert={msgAlert} clearUser={clearUser} user={user} /> }\r\n          />\r\n          <Route\r\n            path='/change-password'\r\n            element={<ChangePassword msgAlert={msgAlert} user={user} /> }\r\n          />\r\n          <Route\r\n            user={user}\r\n            path='/session'\r\n            element={\r\n              <PlayerForm msgAlert={msgAlert} user={user} />\r\n            }\r\n          />\r\n        </Routes>\r\n\r\n      </main>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\n\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\n\nconst appJsx = (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(appJsx, document.getElementById('root'))\n"],"sourceRoot":""}